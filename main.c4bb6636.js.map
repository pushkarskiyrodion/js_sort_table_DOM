{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addEventListener","e","target","tagName","index","compare","cellIndex","type","innerText","tBody","tr","querySelectorAll","rowA","rowB","cells","numA","numB","salaryA","salaryB","slice","replaceAll","Error","sort","append"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAQC,SAASC,cAAc,SAErCF,EAAMG,iBAAiB,QAAS,SAACC,GAC3BA,GAAqB,OAArBA,EAAEC,OAAOC,QAATF,CAIEG,IAIFC,EAJED,EAAQH,EAAEC,OAAOI,UACjBC,EAAON,EAAEC,OAAOM,UAChBC,EAAQX,SAASC,cAAc,SAC/BW,EAASD,EAAAA,EAAME,iBAAiB,OAG9B,QAAA,GACDJ,IAAS,aAATA,GAAgC,SAATA,EAC1BF,EAAU,SAACO,EAAMC,GACRD,OAAAA,EAAKE,MAAMV,GAAOI,UAAYK,EAAKC,MAAMV,GAAOI,UACnD,GAAK,GAEX,MACGD,IAAS,QAATA,EACHF,EAAU,SAACU,EAAMC,GACRD,OAAAA,EAAKD,MAAMV,GAAOI,UAAYQ,EAAKF,MAAMV,GAAOI,WAEzD,MACGD,IAAS,WAATA,EACHF,EAAU,SAACY,EAASC,GAEhBD,OAAAA,EAAQH,MAAMV,GAAOI,UAAUW,MAAM,GAAGC,WAAW,IAAK,KACtDF,EAAQJ,MAAMV,GAAOI,UAAUW,MAAM,GAAGC,WAAW,IAAK,MAG9D,MACF,QACQ,MAAA,IAAIC,MAAM,oBAGpBX,EAAGY,KAAKjB,GAERI,EAAMc,OAANd,MAAAA,EAAgBC,EAAAA","file":"main.c4bb6636.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const index = e.target.cellIndex;\n  const type = e.target.innerText;\n  const tBody = document.querySelector('tbody');\n  const tr = [...tBody.querySelectorAll('tr')];\n  let compare;\n\n  switch (true) {\n    case type === 'Position' || type === 'Name':\n      compare = (rowA, rowB) => {\n        return rowA.cells[index].innerText > rowB.cells[index].innerText\n          ? 1 : -1;\n      };\n      break;\n    case type === 'Age':\n      compare = (numA, numB) => {\n        return numA.cells[index].innerText - numB.cells[index].innerText;\n      };\n      break;\n    case type === 'Salary':\n      compare = (salaryA, salaryB) => {\n        return (\n          salaryA.cells[index].innerText.slice(1).replaceAll(',', '.')\n          - salaryB.cells[index].innerText.slice(1).replaceAll(',', '.')\n        );\n      };\n      break;\n    default:\n      throw new Error(\"it doesn't exist\");\n  }\n\n  tr.sort(compare);\n\n  tBody.append(...tr);\n});\n"]}